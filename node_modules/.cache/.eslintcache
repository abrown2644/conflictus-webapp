[{"C:\\code\\projects\\conflictus-webapp\\src\\index.js":"1","C:\\code\\projects\\conflictus-webapp\\src\\App.js":"2","C:\\code\\projects\\conflictus-webapp\\src\\reportWebVitals.js":"3","C:\\code\\projects\\conflictus-webapp\\src\\components\\map\\Map.js":"4","C:\\code\\projects\\conflictus-webapp\\src\\components\\map\\LeafletMap.js":"5"},{"size":500,"mtime":1612978290000,"results":"6","hashOfConfig":"7"},{"size":339,"mtime":1623197931759,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612978290000,"results":"9","hashOfConfig":"7"},{"size":6047,"mtime":1622847427543,"results":"10","hashOfConfig":"7"},{"size":7285,"mtime":1623198340606,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1auh2tj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\code\\projects\\conflictus-webapp\\src\\index.js",[],["24","25"],"C:\\code\\projects\\conflictus-webapp\\src\\App.js",["26","27"],"C:\\code\\projects\\conflictus-webapp\\src\\reportWebVitals.js",[],"C:\\code\\projects\\conflictus-webapp\\src\\components\\map\\Map.js",["28","29","30","31","32"],"import React, {useEffect, useState} from \"react\"\r\nimport SelectSearch from 'react-select-search'\r\nimport Select from 'react-select'\r\nimport LeafletMap from './LeafletMap'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './Map.scss';\r\n\r\nfunction Map({ theme }) { \r\n    let year = new Date().getFullYear()    \r\n  \r\n    const [selectedWar, setSelectedWar] = useState({\r\n      value: 1,\r\n      label: \"Seven Years' War\"\r\n    });\r\n    const [warsState, setWarsState] = useState({\r\n        loading: true,\r\n        wars: null,\r\n        error: null\r\n    });    \r\n    const [battlesState, setBattlesState] = useState({\r\n        loading: true,        \r\n        battles: null\r\n    });\r\n    const [sliderValue, setSliderValue] = useState([year - 100, year ]);\r\n\r\n    const [showWarCard, setShowWarCard] = useState(false);\r\n\r\n    const toggleWarCard = () => {\r\n      if(showWarCard == false){\r\n        setShowWarCard(true);\r\n      }\r\n      else {\r\n        setShowWarCard(false);\r\n      }      \r\n    };\r\n    \r\n    //fetch wars\r\n    useEffect(() => {\r\n        fetch(\"https://localhost:44346/api/wars\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {            \r\n              console.log(result.data)\r\n              setWarsState({ loading:false, wars: result.data});\r\n            },\r\n            \r\n            (error) => {\r\n              setWarsState({ loading:false, error: error});\r\n            }\r\n          )\r\n      }, [])\r\n\r\n    //initial battles to load\r\n    useEffect(() => {\r\n      fetchBattles(selectedWar)\r\n    }, [])\r\n\r\n    //show warcard onload when desktop\r\n    useEffect(() => {\r\n      if(window.innerWidth > 728)\r\n        setShowWarCard(true);\r\n    }, [])\r\n\r\n\r\n    function fetchBattles(war) {\r\n      let url = `https://localhost:44346/api/battles/war=${war.value}`;\r\n      fetch(url).then(res => res.json())\r\n      .then(result => {\r\n        console.log(result.data);\r\n        setBattlesState({battles: result.data});\r\n      })\r\n      // console.log(war);      \r\n      setSelectedWar({value: war.value, label: war.label});\r\n      document.title = war.label;     \r\n      // document.getElementById('map-title').innerText = war.label; \r\n    };\r\n    \r\n    function fetchBattlesByDates(sliderValue) { \r\n      console.log(\"fetching by date range!\");\r\n      console.log(sliderValue);        \r\n      let url = `https://localhost:44346/api/battles/date=${sliderValue[0]},${sliderValue[1]}`;\r\n      fetch(url).then(res => res.json())\r\n      .then(result => {\r\n        // console.log(result.data);\r\n        setBattlesState({battles: result.data});\r\n      },[])       \r\n      document.title = `${sliderValue[0]} - ${sliderValue[1]}`;      \r\n    };\r\n\r\n   \r\n    //slider\r\n    const handleSliderChange = (event, data) => {\r\n      // console.log(data);\r\n      setSliderValue(data);      \r\n    };    \r\n\r\n    // function valuetext(sliderValue) {\r\n    //   return `value: ${sliderValue}`;\r\n    // }\r\n\r\n    return (        \r\n        <div id=\"map\">                 \r\n          \r\n          <div className=\"map_ui war_selector\">\r\n            {warsState.wars ? \r\n            <Select onChange={(e) => fetchBattles(e)} \r\n              placeholder={\"select a war\"} \r\n              options={warsState.wars.map((war, index) =>( {value:war.id, label:war.name} ))} \r\n              className=\"selectMenu\"\r\n              style={{marginRight: \"10px\"}}\r\n            />\r\n            : \r\n            <Select defaultValue={1} \r\n              isLoading={true} \r\n              isDisabled={true} \r\n              placeholder={\"loading..\"}\r\n              options={\"none\"} \r\n              style={{marginRight: \"10px\"}}\r\n            />}\r\n          </div>              \r\n          <button className=\"map_ui war_card_control\" onClick={toggleWarCard}>\r\n              <div className=\"war_card_control__arrow\">{showWarCard ? '^' : 'v'}</div>\r\n          </button>\r\n                      \r\n          <div className=\"map_ui war_card\" style={showWarCard ? {display:\"block\"} : {display: \"none\"}}>                               \r\n            <div>{battlesState.battles ? \r\n              <div style={{padding: \"10px\"}}>\r\n                <div>{selectedWar.label ? <b>{selectedWar.label}</b> : ''}</div>\r\n                <img src={battlesState.battles[0].war.imageUrl} width=\"100%\"></img> \r\n                <p>{battlesState.battles[0].war.date}</p>\r\n                <p style={{fontSize: \".89rem\"}}>{battlesState.battles[0].war.summary}</p>\r\n                <a href={battlesState.battles[0].war.url}>Link</a>\r\n              </div>\r\n              : ''}\r\n            </div>            \r\n          </div> \r\n\r\n          <Grid container style={{display: \"flex\", justifyContent: \"center\", position: \"absolute\", zIndex:\"999\", alignItems: \"center\", bottom: \"20px\"}}>\r\n            <Grid item xs={9}>\r\n              <div style={{display: \"flex\", justifyContent: \"space-evenly\"}}>              \r\n                <b>{sliderValue[0]}{sliderValue[0] > 0 ? '' : 'BC'}</b>\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/7/71/Arrow_east.svg\" height=\"15px\"></img>                                      \r\n                <b>{sliderValue[1]}</b>                                    \r\n                <Button variant=\"contained\" onClick={() => fetchBattlesByDates(sliderValue)}>FIND</Button>\r\n              </div>\r\n              <Slider\r\n                value={sliderValue}\r\n                onChange={handleSliderChange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                min={-1273}\r\n                max={new Date().getFullYear()}\r\n                // getAriaValueText={valuetext}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          {battlesState.battles ? <LeafletMap theme={theme} battleItems={battlesState.battles}/> : <LeafletMap theme={theme} />}\r\n          {/* {battlesState.battles && console.log(battlesState.battles)}    */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map","C:\\code\\projects\\conflictus-webapp\\src\\components\\map\\LeafletMap.js",["33","34","35","36","37","38","39","40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":3,"column":24,"nodeType":"48","messageId":"49","endLine":3,"endColumn":28},{"ruleId":"46","severity":1,"message":"51","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":20},{"ruleId":"52","severity":1,"message":"53","line":32,"column":22,"nodeType":"54","messageId":"55","endLine":32,"endColumn":24},{"ruleId":"56","severity":1,"message":"57","line":59,"column":8,"nodeType":"58","endLine":59,"endColumn":10,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":132,"column":17,"nodeType":"62","endLine":132,"endColumn":78},{"ruleId":"60","severity":1,"message":"61","line":145,"column":17,"nodeType":"62","endLine":145,"endColumn":109},{"ruleId":"46","severity":1,"message":"63","line":3,"column":50,"nodeType":"48","messageId":"49","endLine":3,"endColumn":61},{"ruleId":"46","severity":1,"message":"64","line":4,"column":8,"nodeType":"48","messageId":"49","endLine":4,"endColumn":13},{"ruleId":"46","severity":1,"message":"65","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":16},{"ruleId":"46","severity":1,"message":"66","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":12},{"ruleId":"52","severity":1,"message":"53","line":34,"column":20,"nodeType":"54","messageId":"55","endLine":34,"endColumn":22},{"ruleId":"60","severity":1,"message":"61","line":49,"column":29,"nodeType":"62","endLine":49,"endColumn":68},{"ruleId":"60","severity":1,"message":"61","line":54,"column":127,"nodeType":"62","endLine":54,"endColumn":151},{"ruleId":"60","severity":1,"message":"61","line":57,"column":127,"nodeType":"62","endLine":57,"endColumn":151},{"ruleId":"67","severity":1,"message":"68","line":100,"column":33,"nodeType":"62","endLine":100,"endColumn":70},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'SelectSearch' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedWar'. Either include it or remove the dependency array.","ArrayExpression",["71"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ZoomControl' is defined but never used.","'Modal' is defined but never used.","'Backdrop' is defined but never used.","'Fade' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [selectedWar]",{"range":"74","text":"75"},[1644,1646],"[selectedWar]"]