[{"C:\\Users\\abrow\\OneDrive\\Documents\\code\\projects\\conflictus-webapp\\src\\index.js":"1","C:\\Users\\abrow\\OneDrive\\Documents\\code\\projects\\conflictus-webapp\\src\\App.js":"2","C:\\Users\\abrow\\OneDrive\\Documents\\code\\projects\\conflictus-webapp\\src\\reportWebVitals.js":"3","C:\\Users\\abrow\\OneDrive\\Documents\\code\\projects\\conflictus-webapp\\src\\components\\map\\Map.js":"4","C:\\Users\\abrow\\OneDrive\\Documents\\code\\projects\\conflictus-webapp\\src\\components\\map\\LeafletMap.js":"5"},{"size":500,"mtime":1612978290000,"results":"6","hashOfConfig":"7"},{"size":331,"mtime":1616878898000,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612978290000,"results":"9","hashOfConfig":"7"},{"size":5054,"mtime":1616888724000,"results":"10","hashOfConfig":"7"},{"size":2045,"mtime":1616891742000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"165thkp",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"C:\\Users\\abrow\\OneDrive\\Documents\\code\\projects\\conflictus-webapp\\src\\index.js",[],["26","27"],"C:\\Users\\abrow\\OneDrive\\Documents\\code\\projects\\conflictus-webapp\\src\\App.js",["28","29"],"import logo from './logo.svg';\nimport Map from './components/map/Map'\nimport { pushRotate as Menu } from 'react-burger-menu'\n\nimport './App.css';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <img className=\"logo\" src={logo}></img>            \n        <Map theme=\"light\"/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\abrow\\OneDrive\\Documents\\code\\projects\\conflictus-webapp\\src\\reportWebVitals.js",[],"C:\\Users\\abrow\\OneDrive\\Documents\\code\\projects\\conflictus-webapp\\src\\components\\map\\Map.js",["30","31"],"import React, {useEffect, useState} from \"react\"\r\nimport SelectSearch from 'react-select-search'\r\nimport Select from 'react-select'\r\nimport LeafletMap from './LeafletMap'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './Map.scss';\r\n\r\nfunction Map({ theme }) { \r\n    let year = new Date().getFullYear()\r\n  \r\n    const [selectedWar, setSelectedWar] = useState({\r\n      value: 1,\r\n      label: \"Seven Years' War\"\r\n    });\r\n    const [warsState, setWarsState] = useState({\r\n        loading: true,\r\n        wars: null,\r\n        error: null\r\n    });    \r\n    const [battlesState, setBattlesState] = useState({\r\n        loading: true,        \r\n        battles: null\r\n    });\r\n    const [sliderValue, setSliderValue] = useState([year - 100, year ]);\r\n    \r\n    //fetch wars\r\n    useEffect(() => {\r\n        fetch(\"https://localhost:44346/api/wars\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {            \r\n              // console.log(result.data)\r\n              setWarsState({ loading:false, wars: result.data});\r\n            },\r\n            \r\n            (error) => {\r\n              setWarsState({ loading:false, error: error});\r\n            }\r\n          )\r\n      }, [])\r\n\r\n    //initial battles to load\r\n    useEffect(() => {\r\n      fetchBattles(selectedWar)\r\n    }, [])\r\n\r\n\r\n    function fetchBattles(war) {\r\n      let url = `https://localhost:44346/api/battles/war=${war.value}`;\r\n      fetch(url).then(res => res.json())\r\n      .then(result => {\r\n        // console.log(result.data);\r\n        setBattlesState({battles: result.data});\r\n      })\r\n      // console.log(war);\r\n      setSelectedWar(war.value);\r\n      document.title = war.label;     \r\n      // document.getElementById('map-title').innerText = war.label; \r\n    };\r\n    \r\n    function fetchBattlesByDates(sliderValue) { \r\n      console.log(\"fetching by date range!\");\r\n      console.log(sliderValue);        \r\n      let url = `https://localhost:44346/api/battles/date=${sliderValue[0]},${sliderValue[1]}`;\r\n      fetch(url).then(res => res.json())\r\n      .then(result => {\r\n        // console.log(result.data);\r\n        setBattlesState({battles: result.data});\r\n      },[])       \r\n      document.title = `${sliderValue[0]} - ${sliderValue[1]}`;      \r\n    };\r\n\r\n   \r\n    //slider\r\n    const handleSliderChange = (event, data) => {\r\n      // console.log(data);\r\n      setSliderValue(data);      \r\n    };    \r\n\r\n    // function valuetext(sliderValue) {\r\n    //   return `value: ${sliderValue}`;\r\n    // }\r\n\r\n    return (        \r\n        <div id=\"map\">                 \r\n          <Grid container style={{ position: \"absolute\", zIndex:\"99999\", alignItems: \"center\", marginTop: \"8px\"}}>\r\n            <Grid item xs={2} md={1}>\r\n              {/* <h4 id=\"map-title\"></h4> */}\r\n            </Grid>\r\n            <Grid item xs={10} md={11} style={{display: \"flex\", justifyContent: \"end\"}}>\r\n              <Grid item xs={12} md={3} style={{marginRight: \"10px\", border: \"none\", borderRadius: \"0px\"}}>\r\n                {warsState.wars ? \r\n                <Select onChange={(e) => fetchBattles(e)} \r\n                  placeholder={\"select a war\"} \r\n                  options={warsState.wars.map((war, index) =>( {value:war.id, label:war.name} ))} \r\n                  className=\"selectMenu\"\r\n                  style={{marginRight: \"10px\"}}\r\n                />\r\n                : \r\n                <Select defaultValue={1} \r\n                  isLoading={true} \r\n                  isDisabled={true} \r\n                  placeholder={\"loading..\"}\r\n                  options={\"none\"} \r\n                  style={{marginRight: \"10px\"}}\r\n                />}\r\n              </Grid>              \r\n            </Grid>            \r\n          </Grid>\r\n\r\n          <Grid container style={{display: \"flex\", justifyContent: \"center\", position: \"absolute\", zIndex:\"999\", alignItems: \"center\", bottom: \"20px\"}}>\r\n            <Grid item xs={9}>\r\n              <div style={{display: \"flex\", justifyContent: \"space-evenly\"}}>              \r\n                <b>from: {sliderValue[0]}</b>                                      \r\n                <b>to: {sliderValue[1]}</b>                                    \r\n                <Button variant=\"contained\" onClick={() => fetchBattlesByDates(sliderValue)}>FIND</Button>\r\n              </div>\r\n              <Slider\r\n                value={sliderValue}\r\n                onChange={handleSliderChange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                min={-1273}\r\n                max={new Date().getFullYear()}\r\n                // getAriaValueText={valuetext}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          {battlesState.battles ? <LeafletMap theme={theme} battleItems={battlesState.battles}/> : <LeafletMap theme={theme} />}\r\n          {/* {battlesState.battles && console.log(battlesState.battles)}    */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map","C:\\Users\\abrow\\OneDrive\\Documents\\code\\projects\\conflictus-webapp\\src\\components\\map\\LeafletMap.js",["32","33","34","35","36"],"import 'leaflet/dist/leaflet.css';\r\nimport Leaflet from 'leaflet'\r\nimport { MapContainer, TileLayer, Popup, Circle, ZoomControl } from 'react-leaflet'\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport React from 'react';\r\n\r\nfunction LeafletMap({ theme, battleItems}) {\r\n\r\n    //set max map bounds\r\n    const corner1 = Leaflet.latLng(-90, -200)\r\n    const corner2 = Leaflet.latLng(90, 200)\r\n    const customBounds = Leaflet.latLngBounds(corner1, corner2)\r\n\r\n    return(\r\n        <MapContainer center={[28.987776073100964, -40.70433830991955]}\r\n         zoom={3}\r\n          minZoom={3}\r\n           scrollWheelZoom={true}\r\n            zoomControl={false}\r\n             maxBounds={customBounds}\r\n             maxBoundsViscosity={1}\r\n              style={{ height: \"100vh\" }}\r\n             >\r\n            {theme == 'light' ? <TileLayer\r\n                attribution='Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ'\r\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}\"\r\n            /> : \r\n            <TileLayer\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\r\n            url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\"\r\n            />}\r\n            {/* <ZoomControl position=\"bottomright\"/>  */}\r\n            {battleItems && battleItems.map((battle, index) => (                           \r\n                <Circle key={index} pathOptions={{ color: '#d7263d' }} center={[battle.location.latitude, battle.location.longitude]}>\r\n                    <Popup>\r\n                        <h4>{battle.title}</h4>\r\n                        <h5>{battle.date}</h5>                    \r\n                    </Popup>\r\n                </Circle>\r\n            ))}            \r\n        </MapContainer>\r\n    );\r\n}\r\nexport default LeafletMap\r\n\r\n\r\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":24,"nodeType":"43","messageId":"44","endLine":3,"endColumn":28},{"ruleId":"45","severity":1,"message":"46","line":12,"column":9,"nodeType":"47","endLine":12,"endColumn":42},{"ruleId":"41","severity":1,"message":"48","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":20},{"ruleId":"49","severity":1,"message":"50","line":48,"column":8,"nodeType":"51","endLine":48,"endColumn":10,"suggestions":"52"},{"ruleId":"41","severity":1,"message":"53","line":3,"column":50,"nodeType":"43","messageId":"44","endLine":3,"endColumn":61},{"ruleId":"41","severity":1,"message":"54","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":13},{"ruleId":"41","severity":1,"message":"55","line":5,"column":8,"nodeType":"43","messageId":"44","endLine":5,"endColumn":16},{"ruleId":"41","severity":1,"message":"56","line":6,"column":8,"nodeType":"43","messageId":"44","endLine":6,"endColumn":12},{"ruleId":"57","severity":1,"message":"58","line":26,"column":20,"nodeType":"59","messageId":"60","endLine":26,"endColumn":22},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SelectSearch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedWar'. Either include it or remove the dependency array.","ArrayExpression",["63"],"'ZoomControl' is defined but never used.","'Modal' is defined but never used.","'Backdrop' is defined but never used.","'Fade' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [selectedWar]",{"range":"66","text":"67"},[1402,1404],"[selectedWar]"]