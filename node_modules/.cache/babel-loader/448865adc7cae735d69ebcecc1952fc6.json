{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abrow\\\\OneDrive\\\\Documents\\\\code\\\\projects\\\\conflictus-webapp\\\\src\\\\components\\\\map\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SelectSearch from 'react-select-search';\nimport Select from 'react-select';\nimport LeafletMap from './LeafletMap';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport Button from '@material-ui/core/Button';\nimport './Map.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map({\n  theme\n}) {\n  _s();\n\n  let year = new Date().getFullYear();\n  const [selectedWar, setSelectedWar] = useState({\n    value: 1,\n    label: \"Seven Years' War\"\n  });\n  const [warsState, setWarsState] = useState({\n    loading: true,\n    wars: null,\n    error: null\n  });\n  const [battlesState, setBattlesState] = useState({\n    loading: true,\n    battles: null\n  });\n  const [sliderValue, setSliderValue] = useState([year - 100, year]); //fetch wars\n\n  useEffect(() => {\n    fetch(\"https://localhost:44346/api/wars\").then(res => res.json()).then(result => {\n      // console.log(result.data)\n      setWarsState({\n        loading: false,\n        wars: result.data\n      });\n    }, error => {\n      setWarsState({\n        loading: false,\n        error: error\n      });\n    });\n  }, []); //initial battles to load\n\n  useEffect(() => {\n    fetchBattles(selectedWar);\n  }, []);\n\n  function fetchBattles(war) {\n    let url = `https://localhost:44346/api/battles/war=${war.value}`;\n    fetch(url).then(res => res.json()).then(result => {\n      // console.log(result.data);\n      setBattlesState({\n        battles: result.data\n      });\n    }); // console.log(war);\n\n    setSelectedWar(war.value);\n    document.title = war.label; // document.getElementById('map-title').innerText = war.label; \n  }\n\n  ;\n\n  function fetchBattlesByDates(sliderValue) {\n    console.log(\"fetching by date range!\");\n    console.log(sliderValue);\n    let url = `https://localhost:44346/api/battles/date=${sliderValue[0]},${sliderValue[1]}`;\n    fetch(url).then(res => res.json()).then(result => {\n      // console.log(result.data);\n      setBattlesState({\n        battles: result.data\n      });\n    }, []);\n    document.title = `${sliderValue[0]} - ${sliderValue[1]}`;\n  }\n\n  ; //slider\n\n  const handleSliderChange = (event, data) => {\n    // console.log(data);\n    setSliderValue(data);\n  }; // function valuetext(sliderValue) {\n  //   return `value: ${sliderValue}`;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        position: \"absolute\",\n        zIndex: \"99999\",\n        alignItems: \"center\",\n        marginTop: \"8px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        md: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        md: 11,\n        style: {\n          display: \"flex\",\n          justifyContent: \"end\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          style: {\n            marginRight: \"10px\",\n            border: \"none\",\n            borderRadius: \"0px\"\n          },\n          children: warsState.wars ? /*#__PURE__*/_jsxDEV(Select, {\n            onChange: e => fetchBattles(e),\n            placeholder: \"select a war\",\n            options: warsState.wars.map((war, index) => ({\n              value: war.id,\n              label: war.name\n            })),\n            className: \"selectMenu\",\n            style: {\n              marginRight: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: 1,\n            isLoading: true,\n            isDisabled: true,\n            placeholder: \"loading..\",\n            options: \"none\",\n            style: {\n              marginRight: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        position: \"absolute\",\n        zIndex: \"999\",\n        alignItems: \"center\",\n        bottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-evenly\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"from: \", sliderValue[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"to: \", sliderValue[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => fetchBattlesByDates(sliderValue),\n            children: \"FIND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: sliderValue,\n          onChange: handleSliderChange,\n          valueLabelDisplay: \"auto\",\n          \"aria-labelledby\": \"range-slider\",\n          min: -1273,\n          max: new Date().getFullYear() // getAriaValueText={valuetext}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }, this), battlesState.battles ? /*#__PURE__*/_jsxDEV(LeafletMap, {\n      theme: theme,\n      battleItems: battlesState.battles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(LeafletMap, {\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 100\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Map, \"GQWqxzIen8BqCZfhlqMOzGcp4EQ=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/abrow/OneDrive/Documents/code/projects/conflictus-webapp/src/components/map/Map.js"],"names":["React","useEffect","useState","SelectSearch","Select","LeafletMap","Grid","Slider","Button","Map","theme","year","Date","getFullYear","selectedWar","setSelectedWar","value","label","warsState","setWarsState","loading","wars","error","battlesState","setBattlesState","battles","sliderValue","setSliderValue","fetch","then","res","json","result","data","fetchBattles","war","url","document","title","fetchBattlesByDates","console","log","handleSliderChange","event","position","zIndex","alignItems","marginTop","display","justifyContent","marginRight","border","borderRadius","e","map","index","id","name","bottom"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\r\nimport SelectSearch from 'react-select-search'\r\nimport Select from 'react-select'\r\nimport LeafletMap from './LeafletMap'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './Map.scss';\r\n\r\nfunction Map({ theme }) { \r\n    let year = new Date().getFullYear()\r\n  \r\n    const [selectedWar, setSelectedWar] = useState({\r\n      value: 1,\r\n      label: \"Seven Years' War\"\r\n    });\r\n    const [warsState, setWarsState] = useState({\r\n        loading: true,\r\n        wars: null,\r\n        error: null\r\n    });    \r\n    const [battlesState, setBattlesState] = useState({\r\n        loading: true,        \r\n        battles: null\r\n    });\r\n    const [sliderValue, setSliderValue] = useState([year - 100, year ]);\r\n    \r\n    //fetch wars\r\n    useEffect(() => {\r\n        fetch(\"https://localhost:44346/api/wars\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {            \r\n              // console.log(result.data)\r\n              setWarsState({ loading:false, wars: result.data});\r\n            },\r\n            \r\n            (error) => {\r\n              setWarsState({ loading:false, error: error});\r\n            }\r\n          )\r\n      }, [])\r\n\r\n    //initial battles to load\r\n    useEffect(() => {\r\n      fetchBattles(selectedWar)\r\n    }, [])\r\n\r\n\r\n    function fetchBattles(war) {\r\n      let url = `https://localhost:44346/api/battles/war=${war.value}`;\r\n      fetch(url).then(res => res.json())\r\n      .then(result => {\r\n        // console.log(result.data);\r\n        setBattlesState({battles: result.data});\r\n      })\r\n      // console.log(war);\r\n      setSelectedWar(war.value);\r\n      document.title = war.label;     \r\n      // document.getElementById('map-title').innerText = war.label; \r\n    };\r\n    \r\n    function fetchBattlesByDates(sliderValue) { \r\n      console.log(\"fetching by date range!\");\r\n      console.log(sliderValue);        \r\n      let url = `https://localhost:44346/api/battles/date=${sliderValue[0]},${sliderValue[1]}`;\r\n      fetch(url).then(res => res.json())\r\n      .then(result => {\r\n        // console.log(result.data);\r\n        setBattlesState({battles: result.data});\r\n      },[])       \r\n      document.title = `${sliderValue[0]} - ${sliderValue[1]}`;      \r\n    };\r\n\r\n   \r\n    //slider\r\n    const handleSliderChange = (event, data) => {\r\n      // console.log(data);\r\n      setSliderValue(data);      \r\n    };    \r\n\r\n    // function valuetext(sliderValue) {\r\n    //   return `value: ${sliderValue}`;\r\n    // }\r\n\r\n    return (        \r\n        <div id=\"map\">                 \r\n          <Grid container style={{ position: \"absolute\", zIndex:\"99999\", alignItems: \"center\", marginTop: \"8px\"}}>\r\n            <Grid item xs={2} md={1}>\r\n              {/* <h4 id=\"map-title\"></h4> */}\r\n            </Grid>\r\n            <Grid item xs={10} md={11} style={{display: \"flex\", justifyContent: \"end\"}}>\r\n              <Grid item xs={12} md={3} style={{marginRight: \"10px\", border: \"none\", borderRadius: \"0px\"}}>\r\n                {warsState.wars ? \r\n                <Select onChange={(e) => fetchBattles(e)} \r\n                  placeholder={\"select a war\"} \r\n                  options={warsState.wars.map((war, index) =>( {value:war.id, label:war.name} ))} \r\n                  className=\"selectMenu\"\r\n                  style={{marginRight: \"10px\"}}\r\n                />\r\n                : \r\n                <Select defaultValue={1} \r\n                  isLoading={true} \r\n                  isDisabled={true} \r\n                  placeholder={\"loading..\"}\r\n                  options={\"none\"} \r\n                  style={{marginRight: \"10px\"}}\r\n                />}\r\n              </Grid>              \r\n            </Grid>            \r\n          </Grid>\r\n\r\n          <Grid container style={{display: \"flex\", justifyContent: \"center\", position: \"absolute\", zIndex:\"999\", alignItems: \"center\", bottom: \"20px\"}}>\r\n            <Grid item xs={9}>\r\n              <div style={{display: \"flex\", justifyContent: \"space-evenly\"}}>              \r\n                <b>from: {sliderValue[0]}</b>                                      \r\n                <b>to: {sliderValue[1]}</b>                                    \r\n                <Button variant=\"contained\" onClick={() => fetchBattlesByDates(sliderValue)}>FIND</Button>\r\n              </div>\r\n              <Slider\r\n                value={sliderValue}\r\n                onChange={handleSliderChange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                min={-1273}\r\n                max={new Date().getFullYear()}\r\n                // getAriaValueText={valuetext}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          {battlesState.battles ? <LeafletMap theme={theme} battleItems={battlesState.battles}/> : <LeafletMap theme={theme} />}\r\n          {/* {battlesState.battles && console.log(battlesState.battles)}    */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map"]},"metadata":{},"sourceType":"module"}